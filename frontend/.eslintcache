[{"/home/hightmike/IdeaProjects/directory-subscriber/frontend/src/index.js":"1","/home/hightmike/IdeaProjects/directory-subscriber/frontend/src/reportWebVitals.js":"2","/home/hightmike/IdeaProjects/directory-subscriber/frontend/src/FormNewParticipants.js":"3"},{"size":548,"mtime":1611675056068,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1611589336272,"results":"6","hashOfConfig":"5"},{"size":10704,"mtime":1611679630111,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"iev3dm",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"/home/hightmike/IdeaProjects/directory-subscriber/frontend/src/index.js",[],["16","17"],"/home/hightmike/IdeaProjects/directory-subscriber/frontend/src/reportWebVitals.js",[],"/home/hightmike/IdeaProjects/directory-subscriber/frontend/src/FormNewParticipants.js",["18","19","20","21"],"import React from 'react'\nimport InputMask from 'react-input-mask'\nimport './FormNewParticipants.css'\nimport logo from './images/logo.png'\nimport axios from 'axios'\n\nexport const PHONE_NUMBER = /^\\d{3}-?\\d{3}-?\\d{2}-?\\d{2}$/\n\nclass FormNewParticipants extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            firstName: '',\n            lastName: '',\n            workPhone: '',\n            mobile: '',\n            email: '',\n\n            firstNameValid: true,\n            lastNameValid: true,\n            workPhoneValid: true,\n            emailValid: true,\n            mobileValid: true,\n\n            firstNameValidationErrors: '',\n            lastNameValidationErrors: '',\n            workPhoneValidationErrors: '',\n            emailValidationErrors: '',\n            mobailValidationErrors: '',\n        }\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n\n        const {firstName, lastName, workPhone, mobile, email, firstNameValidationErrors, lastNameValidationErrors, workPhoneValidationErrors} = this.state\n\n        if (firstName.length === 0) {\n            this.setState({\n                firstNameValidationErrors: 'Поле обязательно к заполнению',\n            })\n        }\n        if (lastName.length === 0) {\n            this.setState({\n                lastNameValidationErrors: 'Поле обязательно к заполнению',\n            })\n        }\n        if (workPhone.length === 0) {\n            this.setState({\n                workPhoneValidationErrors: 'Поле обязательно к заполнению',\n            })\n        }\n\n        if (firstName.length > 0 && lastName.length > 0 && workPhone.length > 0 && !firstNameValidationErrors &&\n            !lastNameValidationErrors && !workPhoneValidationErrors) {\n            axios({\n                method: 'post',\n                headers: { 'Content-Type': 'application/json'},\n                url: '/data/prepare',\n                data: {\n                    firstName: firstName,\n                    lastName: lastName,\n                    workPhone: workPhone,\n                    mobile: mobile,\n                    email: email,\n                }\n            }).then( (response)=> {\n                console.log(response.data);\n            }).then( (error)=> {\n                console.log(error);\n            });\n        }\n    }\n\n    handleChange = (fieldName, e) => {\n        this.setState({\n            [`${fieldName}ValidationErrors`]: '',\n            [fieldName]: e.target.value,\n        })\n    }\n\n    validateField = (fieldName, e) => {\n        const {value} = e.target\n        this.checkValidation({\n            fieldName,\n            value: value,\n            [`${fieldName}Valid`]: this.state[`${fieldName}Valid`],\n        })\n    }\n\n    checkValidation = ({fieldName, value, firstNameValid, lastNameValid, workPhoneValid, mobileValid, emailValid}) => {\n        switch (fieldName) {\n            case 'firstName':\n                firstNameValid = value.length <= 10\n                let firstNameValidationErrors = firstNameValid ? '' : 'Должно быть меньше 10 символов'\n                this.setState({\n                    firstNameValidationErrors: firstNameValidationErrors,\n                })\n                break\n\n            case 'lastName':\n                lastNameValid = value.length <= 20\n                let lastNameValidationErrors = lastNameValid ? '' : 'Должно быть меньше 20 символов'\n\n                this.setState({\n                    lastNameValidationErrors: lastNameValidationErrors,\n                })\n                break\n\n            case 'workPhone':\n                workPhoneValid = PHONE_NUMBER.test(value)\n                let workPhoneValidationErrors = workPhoneValid ? '' : 'Поле формата «nnn-xxx-xx-xx»'\n\n                this.setState({\n                    workPhoneValidationErrors: workPhoneValidationErrors,\n                })\n                break\n\n            case 'mobile':\n                mobileValid = PHONE_NUMBER.test(value)\n                let mobailValidationErrors = mobileValid ? '' : 'Поле формата «nnn-xxx-xx-xx»'\n\n                this.setState({\n                    mobailValidationErrors: mobailValidationErrors,\n                })\n                break\n\n            case 'email':\n                emailValid = value.match(/^([\\w\\.\\-]+)@([\\w\\-]+)$/i)\n                let emailValidationErrors = emailValid ? '' : 'Поле формата «nnn-xxx-xx-xx»'\n\n                this.setState({\n                    emailValidationErrors: emailValidationErrors,\n                })\n                break\n        }\n    }\n\n    clearForm = () => {\n        this.setState({\n            firstName: '',\n            lastName: '',\n            workPhone: '',\n            mobile: '',\n            email: '',\n\n            firstNameValid: true,\n            lastNameValid: true,\n            workPhoneValid: true,\n            emailValid: true,\n            mobileValid: true,\n\n            firstNameValidationErrors: '',\n            lastNameValidationErrors: '',\n            workPhoneValidationErrors: '',\n            emailValidationErrors: '',\n            mobailValidationErrors: '',\n        })\n    }\n\n    sendData = () => {\n        const headers = {\n            'Content-Type': 'application/json',\n        };\n        axios.put(`/data/move`,{headers})\n            .then(res => {\n                console.log(res.data)\n            })\n    }\n\n    render() {\n        const {\n            firstName,\n            lastName,\n            workPhone,\n            mobile,\n            email,\n\n            firstNameValidationErrors,\n            lastNameValidationErrors,\n            workPhoneValidationErrors,\n            emailValidationErrors,\n            mobailValidationErrors,\n        } = this.state\n\n        return (\n            <>\n                <section className=\"logo\">\n                    <img src={logo} width=\"203px\" height=\"51px\" className=\"logo__img\" alt=\"logo\"/>\n                </section>\n                <div className=\"block\"></div>\n\n                <div className=\"wrapper\">\n                    <form className=\"form\" onSubmit={this.handleSubmit}>\n                        <div className=\"form__content\">\n                            <label htmlFor=\"firstName\">Имя</label>\n                            <input\n                                type=\"text\"\n                                className=\"form__input\"\n                                id=\"firstName\"\n                                value={firstName}\n                                onChange={(e) => this.handleChange('firstName', e)}\n                                onBlur={(e) => this.validateField('firstName', e)}\n                            />\n                            {firstNameValidationErrors && firstNameValidationErrors &&\n                            <span className=\"form__input-error\">{firstNameValidationErrors}</span>}\n                        </div>\n                        <div className=\"form__content\">\n                            <label htmlFor=\"lastName\">Фамилия</label>\n                            <input\n                                type=\"text\"\n                                className=\"form__input\"\n                                id=\"lastName\"\n                                value={lastName}\n                                onChange={(e) => this.handleChange('lastName', e)}\n                                onBlur={(e) => this.validateField('lastName', e)}\n                            />\n                            {lastNameValidationErrors && lastNameValidationErrors &&\n                            <span className=\"form__input-error\">{lastNameValidationErrors}</span>}\n                        </div>\n                        <div className=\"form__content\">\n                            <label htmlFor=\"workPhone\">Рабочий тел.</label>\n                            <InputMask\n                                mask=\"999-999-99-99\"\n                                className=\"form__input\"\n                                id=\"workPhone\"\n                                value={workPhone}\n                                onChange={(e) => this.handleChange('workPhone', e)}\n                                onBlur={(e) => this.validateField('workPhone', e)}\n                            />\n                            {workPhoneValidationErrors && workPhoneValidationErrors &&\n                            <span className=\"form__input-error\">{workPhoneValidationErrors}</span>}\n                        </div>\n                        <div className=\"form__content\">\n                            <label htmlFor=\"mobile\">Мобильный тел.</label>\n                            <InputMask\n                                mask=\"999-999-99-99\"\n                                className=\"form__input\"\n                                id=\"mobile\"\n                                value={mobile}\n                                onChange={(e) => this.handleChange('mobile', e)}\n                                onBlur={(e) => this.validateField('mobile', e)}\n                            />\n                            {mobailValidationErrors && mobailValidationErrors &&\n                            <span className=\"form__input-error\">{mobailValidationErrors}</span>}\n                        </div>\n                        <div className=\"form__content\">\n                            <label htmlFor=\"email\">Email</label>\n                            <input\n                                type=\"text\"\n                                className=\"form__input\"\n                                id=\"email\"\n                                value={email}\n                                onChange={(e) => this.handleChange('email', e)}\n                                onBlur={(e) => this.validateField('email', e)}\n                            />\n                            {email.length && emailValidationErrors && emailValidationErrors ?\n                                <span className=\"form__input-error\">{emailValidationErrors}</span> : ''}\n                        </div>\n                        <div className=\"form__content form__btn\">\n                            <button type=\"submit\" className=\"form__button\">Добавить</button>\n                            <button type=\"button\" onClick={this.clearForm} className=\"form__button\">Очистить</button>\n                            <button type=\"button\" onClick={this.sendData} className=\"form__button\">Отправить</button>\n                        </div>\n                    </form>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default FormNewParticipants\n",{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","severity":1,"message":"27","line":92,"column":9,"nodeType":"28","messageId":"29","endLine":136,"endColumn":10},{"ruleId":"30","severity":1,"message":"31","line":129,"column":48,"nodeType":"32","messageId":"33","endLine":129,"endColumn":49,"suggestions":"34"},{"ruleId":"30","severity":1,"message":"35","line":129,"column":50,"nodeType":"32","messageId":"33","endLine":129,"endColumn":51,"suggestions":"36"},{"ruleId":"30","severity":1,"message":"35","line":129,"column":60,"nodeType":"32","messageId":"33","endLine":129,"endColumn":61,"suggestions":"37"},"no-native-reassign",["38"],"no-negated-in-lhs",["39"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["40","41"],"Unnecessary escape character: \\-.",["42","43"],["44","45"],"no-global-assign","no-unsafe-negation",{"messageId":"46","fix":"47","desc":"48"},{"messageId":"49","fix":"50","desc":"51"},{"messageId":"46","fix":"52","desc":"48"},{"messageId":"49","fix":"53","desc":"51"},{"messageId":"46","fix":"54","desc":"48"},{"messageId":"49","fix":"55","desc":"51"},"removeEscape",{"range":"56","text":"57"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"58","text":"59"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"60","text":"57"},{"range":"61","text":"59"},{"range":"62","text":"57"},{"range":"63","text":"59"},[4282,4283],"",[4282,4282],"\\",[4284,4285],[4284,4284],[4294,4295],[4294,4294]]